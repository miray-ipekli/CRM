
<script src="~/soft-ui-dashboard/assets/js/core/popper.min.js"></script>
<script src="~/soft-ui-dashboard/assets/js/core/bootstrap.min.js"></script>
<script src="~/soft-ui-dashboard/assets/js/plugins/perfect-scrollbar.min.js"></script>
<script src="~/soft-ui-dashboard/assets/js/plugins/smooth-scrollbar.min.js"></script>
<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
<script src="~/soft-ui-dashboard/assets/js/soft-ui-dashboard.min.js?v=1.0.3"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.min.js"></script>
<!-- Aşağıdaki JavaScript kodunu ekleyerek modal açma ve kapatma işlemlerini gerçekleştirin -->
<script>
    // Modal gösterildiğinde çalışacak olay dinleyicisi ekleyin
    $('#taskModal').on('show.bs.modal', function (event) {
        // Tıklanan öğeyi alın
        const anchor = $(event.relatedTarget);
        // "data-task" özniteliğinden görev metnini alın
        const taskText = anchor.data('task');
        // "data-task-description" özniteliğinden görev açıklamasını alın
        const taskDescription = anchor.data('task-description');
        // Modal başlığını ve içeriğini güncelleyin
        $(this).find('.modal-title').text(taskText);
        $(this).find('#modal-task-description').text('Görev Açıklaması: ' + taskDescription);
    });

    // Modal kapatıldığında çalışacak olay dinleyicisi ekleyin
    $('#taskModal').on('hidden.bs.modal', function () {
        // Modal'ı sıfırlayın
        $(this).find('.modal-title').text('');
        $(this).find('#modal-task-description').text('');
    });
</script>
<script>
    function validateEmail(event) {
        const inputValue = event.target.value;
        const emailRegex = /^[^\s]+[^\s]+\.[a-zA-ZüÜğĞşŞıİöÖçÇ]+$/;

        if (!emailRegex.test(inputValue)) {
            event.target.setCustomValidity("Geçerli bir e-posta adresi giriniz.");
        } else {
            event.target.setCustomValidity("");
        }
    }

    function validatePhoneNumber(event) {
        const inputValue = event.target.value;
        const phoneRegex = /^\d{10}$/; // 10 haneli telefon numarası kabul ediliyor.

        if (!phoneRegex.test(inputValue)) {
            event.target.setCustomValidity("Geçerli bir telefon numarası giriniz (örn: 5533455667).");
        } else {
            event.target.setCustomValidity("");
        }
    }
</script>
